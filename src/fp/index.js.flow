// @flow
// This file is generated automatically by `scripts/build/typings.js`. Please, don't change it.

export type Interval = {
  start: Date | number,
  end: Date | number,
}

export type Locale = {
  code?: string,
  formatDistance?: (...args: Array<any>) => any,
  formatRelative?: (...args: Array<any>) => any,
  localize?: {
    ordinalNumber: (...args: Array<any>) => any,
    era: (...args: Array<any>) => any,
    quarter: (...args: Array<any>) => any,
    month: (...args: Array<any>) => any,
    day: (...args: Array<any>) => any,
    dayPeriod: (...args: Array<any>) => any,
  },
  formatLong?: {
    date: (...args: Array<any>) => any,
    time: (...args: Array<any>) => any,
    dateTime: (...args: Array<any>) => any,
  },
  match?: {
    ordinalNumber: (...args: Array<any>) => any,
    era: (...args: Array<any>) => any,
    quarter: (...args: Array<any>) => any,
    month: (...args: Array<any>) => any,
    day: (...args: Array<any>) => any,
    dayPeriod: (...args: Array<any>) => any,
  },
  options?: {
    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6,
    firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7,
  },
}

export type Duration = {
  years?: number,
  months?: number,
  weeks?: number,
  days?: number,
  hours?: number,
  minutes?: number,
  seconds?: number,
}

export type Day = 0 | 1 | 2 | 3 | 4 | 5 | 6

type CurriedFn1<A, R> = <A>(a: A) => R

type CurriedFn2<A, B, R> = <A>(
  a: A
) => CurriedFn1<B, R> | (<A, B>(a: A, b: B) => R)

type CurriedFn3<A, B, C, R> = <A>(
  a: A
) =>
  | CurriedFn2<B, C, R>
  | (<A, B>(
      a: A,
      b: B
    ) => CurriedFn1<C, R> | (<A, B, C>(a: A, b: B, c: C) => R))

type CurriedFn4<A, B, C, D, R> = <A>(
  a: A
) =>
  | CurriedFn3<B, C, D, R>
  | (<A, B>(
      a: A,
      b: B
    ) =>
      | CurriedFn2<C, D, R>
      | (<A, B, C>(
          a: A,
          b: B,
          c: C
        ) => CurriedFn1<D, R> | (<A, B, C, D>(a: A, b: B, c: C, d: D) => R)))

declare module.exports: {
  add: CurriedFn2<void, void, void>,
  differenceInDays: CurriedFn2<void, void, void>,
  format: CurriedFn2<void, void, void>,
  formatDistance: CurriedFn2<void, void, void>,
  formatDistanceWithOptions: CurriedFn3<void, void, void, void>,
  formatWithOptions: CurriedFn3<void, void, void, void>,
  getHours: CurriedFn1<void, void>,
  isDate: CurriedFn1<void, void>,
  isSaturday: CurriedFn1<void, void>,
  isSunday: CurriedFn1<void, void>,
  isValid: CurriedFn1<void, void>,
  parse: CurriedFn3<void, void, void, void>,
  parseISO: CurriedFn1<void, void>,
  parseISOWithOptions: CurriedFn2<void, void, void>,
  parseWithOptions: CurriedFn4<void, void, void, void, void>,
  sub: CurriedFn2<void, void, void>,
  daysInWeek: number,
  daysInYear: number,
  maxTime: number,
  millisecondsInWeek: number,
  millisecondsInDay: number,
  millisecondsInMinute: number,
  millisecondsInHour: number,
  millisecondsInSecond: number,
  minTime: number,
  minutesInYear: number,
  minutesInMonth: number,
  minutesInDay: number,
  minutesInHour: number,
  monthsInQuarter: number,
  monthsInYear: number,
  quartersInYear: number,
  secondsInHour: number,
  secondsInMinute: number,
  secondsInDay: number,
  secondsInWeek: number,
  secondsInYear: number,
  secondsInMonth: number,
  secondsInQuarter: number,
}
